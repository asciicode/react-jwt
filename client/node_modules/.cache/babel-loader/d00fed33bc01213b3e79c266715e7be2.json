{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"/authenticate\";\n\nconst login = (email, password) => {\n  console.log(\"login \", API_URL);\n  return axios.post(API_URL + \"/login\", {\n    email,\n    password\n  }).then(response => {\n    if (response.data.jwt) {\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n    }\n\n    return response.data;\n  });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nconst authService = {\n  login,\n  logout,\n  getCurrentUser\n};\nexport default authService;","map":{"version":3,"sources":["/home/allen/Java/eclipse-exercise/jwt-authentication-react/client/src/services/auth.service.js"],"names":["axios","API_URL","login","email","password","console","log","post","then","response","data","jwt","localStorage","setItem","JSON","stringify","logout","removeItem","getCurrentUser","parse","getItem","authService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,eAAhB;;AAEA,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,OAAtB;AACA,SAAOD,KAAK,CACTO,IADI,CACCN,OAAO,GAAG,QADX,EACqB;AACxBE,IAAAA,KADwB;AAExBC,IAAAA;AAFwB,GADrB,EAKJI,IALI,CAKEC,QAAD,IAAc;AAClB,QAAIA,QAAQ,CAACC,IAAT,CAAcC,GAAlB,EAAuB;AACrBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACC,IAAxB,CAA7B;AACD;;AAED,WAAOD,QAAQ,CAACC,IAAhB;AACD,GAXI,CAAP;AAYD,CAdD;;AAgBA,MAAMM,MAAM,GAAG,MAAM;AACnBJ,EAAAA,YAAY,CAACK,UAAb,CAAwB,MAAxB;AACD,CAFD;;AAIA,MAAMC,cAAc,GAAG,MAAM;AAC3B,SAAOJ,IAAI,CAACK,KAAL,CAAWP,YAAY,CAACQ,OAAb,CAAqB,MAArB,CAAX,CAAP;AACD,CAFD;;AAIA,MAAMC,WAAW,GAAG;AAClBnB,EAAAA,KADkB;AAElBc,EAAAA,MAFkB;AAGlBE,EAAAA;AAHkB,CAApB;AAMA,eAAeG,WAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"/authenticate\";\r\n\r\nconst login = (email, password) => {\r\n  console.log(\"login \", API_URL)\r\n  return axios\r\n    .post(API_URL + \"/login\", {\r\n      email,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.jwt) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nconst authService = {\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n};\r\n\r\nexport default authService;\r\n"]},"metadata":{},"sourceType":"module"}